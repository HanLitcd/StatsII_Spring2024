knitr::opts_chunk$set(echo = TRUE, comment = "")
library(lme4)
library(splines)
library(ggplot2)
library(dplyr)
library(readr)
library(stargazer)
library(readxl)
library(lubridate)
library(broom)
library(tidyr)
library(cowplot)
library(xtable)
read_excel("FOMC_Dissents_Data.xlsx", skip = 3, col_names = TRUE) %>%
filter(Year >= 2005, Year <= 2007) %>%
group_by(`FOMC Meeting`) %>%
mutate(diss = `Number Presidents Dissenting` + `Number Governors Dissenting`) %>%
summarise(total = `FOMC Votes`, Assents = total - diss, Dissents = diss) %>%
gather(Direction, Votes, -c(`FOMC Meeting`, total)) %>%
ggplot(aes(x = `FOMC Meeting`, y = Votes, colour = Direction, fill = Direction)) +
geom_bar(stat = "identity") +
scale_colour_manual(values = c("grey", "black")) +
scale_fill_manual(values = c("grey", "black")) +
scale_y_continuous("Votes Cast", breaks = 0:12, labels = as.character(0:12)) +
theme_minimal()
# ggsave("dissentsplot.pdf", width = 7, height = 5)
merged_votes_text <- read.csv("merged_votes_text.csv",
row.names = 1, stringsAsFactors = FALSE)
ft_coding <- data.frame(Name = c("Kohn", "Yellen", "Bernanke", "Pianalto",
"Fisher", "Lacker", "Plosser", "Hoenig"),
coding = c("Super Dove", "Dove", "Center", "Center",
"Hawk", "Super Hawk", "Super Hawk", "Super Hawk"),
stringsAsFactors = FALSE)
votes.implied <- merged_votes_text[,6:9]
names(votes.implied) <- c("Names", "Low.Votes", "Estimate", "High.Votes")
votes.implied <- merged_votes_text[,6:9]
names(votes.implied) <- c("Names", "Low.Votes", "Estimate", "High.Votes")
merged_votes_text <- read.csv("merged_votes_text.csv",
row.names = 1, stringsAsFactors = FALSE)
ft_coding <- data.frame(Name = c("Kohn", "Yellen", "Bernanke", "Pianalto",
"Fisher", "Lacker", "Plosser", "Hoenig"),
coding = c("Super Dove", "Dove", "Center", "Center",
"Hawk", "Super Hawk", "Super Hawk", "Super Hawk"),
stringsAsFactors = FALSE)
votes.implied <- merged_votes_text[,6:9]
names(votes.implied) <- c("Names", "Low.Votes", "Estimate", "High.Votes")
votes.regional <- read.csv("policy_rate_validation.csv",
stringsAsFactors = FALSE, row.names = 1) %>%
mutate(NAME = toupper(name))
est <- read.csv("idealcompare.csv",
stringsAsFactors = FALSE, row.names = 1)
df <- merged_votes_text %>%
left_join(votes.regional, by = "NAME") %>%
left_join(est, by = "NAME") %>%
mutate(Pref.low = Pref.Policy - 1.96 * Pref.STD,
Pref.high = Pref.Policy + 1.96 * Pref.STD,
med.votes.sd = (med.votes - high.votes) / 1.96) %>%
arrange(ideal) %>%
mutate(ordered = 1:n())
small_df <- df %>%
right_join(ft_coding, by = "Name") %>%
select(NAME, ideal, upper, lower, coding) %>%
mutate(coding = factor(coding,
levels = c("Super Dove", "Dove", "Center", "Hawk", "Super Hawk"))) %>%
arrange(coding, ideal) %>%
mutate(row = 1:n())
labs1 <- small_df$NAME
labs2 <- small_df$coding
ggplot(small_df, aes(x = ideal, y = row)) +
geom_point(size = 2) +
geom_segment(aes(x = lower, xend = upper, y = row, yend = row)) +
scale_y_continuous(breaks = 1:length(labs1),
labels = labs1,
sec.axis = sec_axis(~.,
breaks = 1:length(labs2),
labels = labs2)) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
legend.background = element_blank()) +
labs(x = "Ideal point", y = "Speaker")
# ggsave("rank.pdf", width = 7, height = 5)
nms <- df$NAME
g_text <- ggplot(df, aes(x=ideal, y=ordered)) +
geom_point() +
geom_errorbarh(aes(xmin = lower, xmax = upper, height = 0)) +
theme_bw() +
scale_y_continuous(breaks = 1:length(nms),
labels = nms) +
theme(axis.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_blank()) +
#axis.text.y = element_text(face = c(rep("plain",15),rep("bold",8)))) +
ggtitle("Text Measure")
g_votes <- ggplot(df, aes(x=med.votes, y=ordered)) +
geom_point() + geom_errorbarh(aes(xmin = low.votes, xmax = high.votes, height = 0)) +
theme_bw() +
theme(axis.text.y = element_blank(), axis.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_blank()) +
ggtitle("Vote Measure") +
xlim(-4,4)
g_region <- ggplot(df, aes(x=Pref.Policy, y=ordered)) +
geom_point() + geom_errorbarh(aes(xmin = Pref.Policy - 1.96*Pref.STD,
xmax = Pref.Policy + 1.96*Pref.STD, height = 0 )) +
theme_bw() +
theme(axis.text.y = element_blank(), axis.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_blank()) +
ggtitle("Regional Vote Measure") +
xlim(-10,10)
plot_grid(g_text, g_votes, g_region,
align = "h", ncol = 3,
rel_widths = c(0.38, 0.31, 0.31))
mod.alt <- glmer(as.matrix(depvar) ~ (1 | name) + (1 | month),
data = meta, family = poisson)
# collapse over three topic counts (see Lowe et al. 2011) and regress
depvar <- mk_dv(counts, R_cats_full, L_cats_full)
# meeting data and speaker metadata
ddm <- read.csv("name_role_date.csv")
# topic model output
c_file <- 'topical-ngrams-document-topics.csv'
dd1 <- read.csv(c_file, sep = '\t')[,-1]
names(dd1) <- 0:24 # these are the topics, from 1 to 25
# full sample left and right categories
R_cats_full <- '8'
L_cats_full <- c('7', '17', '21')
## and a function to create an appropriate DV with such things
mk_dv <- function(mat, right, left, na.omit = FALSE){
res <- data.frame(R = rowSums(mat[, right, drop = FALSE]),
L = rowSums(mat[, left, drop = FALSE]))
if (na.omit)
return(na.omit(res))
res
}
# switch dd to the numerical column labels
# names(dd) <- c('7', '17', '21', '8')
dd <- dd1[,c('7','17','21','8','9','14','15')]
good <- rowSums(dd) > 0
meta <- filter(ddm, good, name %in% nicole_peeps)
read_excel("FOMC_Dissents_Data.xlsx", skip = 3, col_names = TRUE) %>%
filter(Year >= 2005, Year <= 2007) %>%
group_by(`FOMC Meeting`) %>%
mutate(diss = `Number Presidents Dissenting` + `Number Governors Dissenting`) %>%
summarise(total = `FOMC Votes`, Assents = total - diss, Dissents = diss) %>%
gather(Direction, Votes, -c(`FOMC Meeting`, total)) %>%
ggplot(aes(x = `FOMC Meeting`, y = Votes, colour = Direction, fill = Direction)) +
geom_bar(stat = "identity") +
scale_colour_manual(values = c("grey", "black")) +
scale_fill_manual(values = c("grey", "black")) +
scale_y_continuous("Votes Cast", breaks = 0:12, labels = as.character(0:12)) +
theme_minimal()
# ggsave("dissentsplot.pdf", width = 7, height = 5)
ipplot <- function(ideal, speaker, lower, upper){
row <- 1:length(ideal)
p <- ggplot(df, aes(ideal, speaker)) +
geom_point(size = 2) +
geom_segment(aes(x=lower, xend=upper, y=row, yend=row)) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank())
p
}
nicole_peeps2007 <- c("GREENSPAN", "GEITHNER", "BIES", "EVANS",
"FISHER", "FERGUSON", "GUYNN", "KOHN",
"LOCKHART", "LACKER", "PIANALTO", "YELLEN",
"MINEHAN", "MOSKOW", "POOLE", "HOENIG",
"FISHER", "STERN", "SANTOMERO")
nicole_peeps2006 <- c("BERNANKE", "GEITHNER", "BIES", "HOENIG",
"KOHN", "KROSZNER", "MINEHAN", "MISHKIN",
"MOSKOW", "POOLE", "WARSH", "FISHER", "OLSON",
"PIANALTO", "PLOSSER", "STERN", "STONE",
"LACKER", "YELLEN")
nicole_peeps2005 <- c("GREENSPAN", "GEITHNER", "BERNANKE", "BIES",
"FERGUSON", "FISHER", "GRAMLICH", "KOHN",
"MOSKOW", "OLSON", "SANTOMERO", "STERN",
"GUYNN", "LACKER", "PIANALTO", "YELLEN",
"HOENIG", "MINEHAN", "POOLE", "HOLCOMB",
"CUMMING")
nicole_peeps <- unique(c(nicole_peeps2007, nicole_peeps2006,
nicole_peeps2005))
# meeting data and speaker metadata
ddm <- read.csv("name_role_date.csv")
# topic model output
c_file <- 'topical-ngrams-document-topics.csv'
dd1 <- read.csv(c_file, sep = '\t')[,-1]
names(dd1) <- 0:24 # these are the topics, from 1 to 25
# full sample left and right categories
R_cats_full <- '8'
L_cats_full <- c('7', '17', '21')
## and a function to create an appropriate DV with such things
mk_dv <- function(mat, right, left, na.omit = FALSE){
res <- data.frame(R = rowSums(mat[, right, drop = FALSE]),
L = rowSums(mat[, left, drop = FALSE]))
if (na.omit)
return(na.omit(res))
res
}
# switch dd to the numerical column labels
# names(dd) <- c('7', '17', '21', '8')
dd <- dd1[,c('7','17','21','8','9','14','15')]
good <- rowSums(dd) > 0
meta <- filter(ddm, good, name %in% nicole_peeps)
counts <- filter(dd, good, ddm$name %in% nicole_peeps)
# collapse over three topic counts (see Lowe et al. 2011) and regress
depvar <- mk_dv(counts, R_cats_full, L_cats_full)
meta <- meta %>%
mutate(month = month(date, label = TRUE),
year = year(date))
mod.alt <- glmer(as.matrix(depvar) ~ (1 | name) + (1 | month),
data = meta, family = poisson)
rf_new <- ranef(mod.new, condVar = TRUE)$name
# adding another category, the ones to regarded as neutral
R_cats_full <- c('8','9','14','15')
L_cats_full <- c('7', '17', '21')
N_cats_full <- c('0','1','2','3','4','5','6','10','11', '12', '13', '16', '18', '19', '20', '22', '23', '24')
mk_dv_modified <- function(mat, right, left, middle, na.omit = FALSE) {
res <- data.frame(
R = rowSums(mat[, right, drop = FALSE]),
L = rowSums(mat[, left, drop = FALSE]),
M = rowSums(mat[, middle, drop = FALSE])
)
if (na.omit) {
return(na.omit(res))
}
res
}
counts_full <- filter(dd1, ddm$name %in% nicole_peeps)
depvar_multi <- mk_dv_modified(counts_full, R_cats_full, L_cats_full,N_cats_full)
#convert them into weight
# Add a new column to store the sum of R, L, and M for each row
depvar_multi$total <- depvar_multi$R + depvar_multi$L + depvar_multi$M
# Calculate the weight of each column (R, L, M) as a proportion of the total
depvar_multi$R_weight <- depvar_multi$R / depvar_multi$total
depvar_multi$L_weight <- depvar_multi$L / depvar_multi$total
depvar_multi$M_weight <- depvar_multi$M / depvar_multi$total
# Now depvar_multi includes the weights of R, L, and M in addition to the original values
#use the weight after taking into account of the neutral speaches of the l/r
depvar_weihgt=depvar_multi[,c('R_weight','L_weight')]
meta_multi <- filter(ddm, name %in% nicole_peeps)
meta_multi <- meta_multi %>%
mutate(month = month(date, label = TRUE),
year = year(date))
mod.new <- glmer(as.matrix(depvar_weihgt*100) ~ (1 | name) + (1 | month),
data = meta_multi, family = binomial)
mod.new
rf_new <- ranef(mod.new, condVar = TRUE)$name
rf_newvar <- as.vector(attr(rf_new, "postVar"))
dfnew <- data.frame(newideal = rf_new[[1]]) %>%
mutate(se = sqrt(rf_newvar),
upper_new = newideal + 2 * se,
lower_new = newideal - 2 * se,
speaker = factor(rownames(rf_new),
levels = rownames(rf_new)[order(newideal)])) %>%
arrange(newideal)
ipplot_new <- function(dfp, speaker, ideal, ideal_new, lower, upper, lower_new, upper_new) {
# Combine the original and new ideal values into a long format
df_long <- tidyr::pivot_longer(dfp,
cols = c(ideal, ideal_new),
names_to = "type",
values_to = "ideal_value")
# Combine the original and new lower and upper values similarly
df_long$lower <- ifelse(df_long$type == "ideal", df_long[[lower]], df_long[[lower_new]])
df_long$upper <- ifelse(df_long$type == "ideal", df_long[[upper]], df_long[[upper_new]])
# Create the plot
p <- ggplot(df_long, aes(x = ideal_value, y = speaker, color = type)) +
geom_point(size = 2) +
geom_segment(aes(x = lower, xend = upper, y = speaker, yend = speaker)) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank()) +
scale_color_manual(values = c("blue", "red")) # Set your desired colors here
return(p)
}
dfmerge=merge(df,dfnew,by='speaker')
library(lme4)
library(splines)
library(ggplot2)
library(dplyr)
library(readr)
library(stargazer)
library(readxl)
library(lubridate)
library(broom)
library(tidyr)
library(cowplot)
library(xtable)
library(lme4)
library(splines)
library(ggplot2)
library(dplyr)
library(readr)
library(stargazer)
library(readxl)
library(lubridate)
library(broom)
library(tidyr)
library(cowplot)
library(xtable)
read_excel("FOMC_Dissents_Data.xlsx", skip = 3, col_names = TRUE) %>%
filter(Year >= 2005, Year <= 2007) %>%
group_by(`FOMC Meeting`) %>%
mutate(diss = `Number Presidents Dissenting` + `Number Governors Dissenting`) %>%
summarise(total = `FOMC Votes`, Assents = total - diss, Dissents = diss) %>%
gather(Direction, Votes, -c(`FOMC Meeting`, total)) %>%
ggplot(aes(x = `FOMC Meeting`, y = Votes, colour = Direction, fill = Direction)) +
geom_bar(stat = "identity") +
scale_colour_manual(values = c("grey", "black")) +
scale_fill_manual(values = c("grey", "black")) +
scale_y_continuous("Votes Cast", breaks = 0:12, labels = as.character(0:12)) +
theme_minimal()
# ggsave("dissentsplot.pdf", width = 7, height = 5)
ipplot <- function(ideal, speaker, lower, upper){
row <- 1:length(ideal)
p <- ggplot(df, aes(ideal, speaker)) +
geom_point(size = 2) +
geom_segment(aes(x=lower, xend=upper, y=row, yend=row)) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank())
p
}
nicole_peeps2007 <- c("GREENSPAN", "GEITHNER", "BIES", "EVANS",
"FISHER", "FERGUSON", "GUYNN", "KOHN",
"LOCKHART", "LACKER", "PIANALTO", "YELLEN",
"MINEHAN", "MOSKOW", "POOLE", "HOENIG",
"FISHER", "STERN", "SANTOMERO")
nicole_peeps2006 <- c("BERNANKE", "GEITHNER", "BIES", "HOENIG",
"KOHN", "KROSZNER", "MINEHAN", "MISHKIN",
"MOSKOW", "POOLE", "WARSH", "FISHER", "OLSON",
"PIANALTO", "PLOSSER", "STERN", "STONE",
"LACKER", "YELLEN")
nicole_peeps2005 <- c("GREENSPAN", "GEITHNER", "BERNANKE", "BIES",
"FERGUSON", "FISHER", "GRAMLICH", "KOHN",
"MOSKOW", "OLSON", "SANTOMERO", "STERN",
"GUYNN", "LACKER", "PIANALTO", "YELLEN",
"HOENIG", "MINEHAN", "POOLE", "HOLCOMB",
"CUMMING")
nicole_peeps <- unique(c(nicole_peeps2007, nicole_peeps2006,
nicole_peeps2005))
# meeting data and speaker metadata
ddm <- read.csv("name_role_date.csv")
# topic model output
c_file <- 'topical-ngrams-document-topics.csv'
dd1 <- read.csv(c_file, sep = '\t')[,-1]
names(dd1) <- 0:24 # these are the topics, from 1 to 25
# full sample left and right categories
R_cats_full <- '8'
L_cats_full <- c('7', '17', '21')
## and a function to create an appropriate DV with such things
mk_dv <- function(mat, right, left, na.omit = FALSE){
res <- data.frame(R = rowSums(mat[, right, drop = FALSE]),
L = rowSums(mat[, left, drop = FALSE]))
if (na.omit)
return(na.omit(res))
res
}
# switch dd to the numerical column labels
# names(dd) <- c('7', '17', '21', '8')
dd <- dd1[,c('7','17','21','8','9','14','15')]
good <- rowSums(dd) > 0
meta <- filter(ddm, good, name %in% nicole_peeps)
counts <- filter(dd, good, ddm$name %in% nicole_peeps)
# collapse over three topic counts (see Lowe et al. 2011) and regress
depvar <- mk_dv(counts, R_cats_full, L_cats_full)
meta <- meta %>%
mutate(month = month(date, label = TRUE),
year = year(date))
mod.mix <- glmer(as.matrix(depvar) ~ (1 | name) + (1 | month),
data = meta, family = binomial)
mod.mix
rf <- ranef(mod.mix, condVar = TRUE)$name
rf_postvar <- as.vector(attr(rf, "postVar"))
rdf <- data.frame(ideal = rf[[1]]) %>%
mutate(se = sqrt(rf_postvar),
upper = ideal + 2 * se,
lower = ideal - 2 * se,
speaker = factor(rownames(rf),
levels = rownames(rf)[order(ideal)])) %>%
arrange(ideal)
ipplot(rdf$ideal, rdf$speaker, rdf$lower, rdf$upper) +
labs(x = "Ideal point", y = "Speaker")
rf <- ranef(mod.mix, condVar = TRUE)$name
rf_postvar <- as.vector(attr(rf, "postVar"))
df <- data.frame(ideal = rf[[1]]) %>%
mutate(se = sqrt(rf_postvar),
upper = ideal + 2 * se,
lower = ideal - 2 * se,
speaker = factor(rownames(rf),
levels = rownames(rf)[order(ideal)])) %>%
arrange(ideal)
ipplot(df$ideal, df$speaker, df$lower, df$upper) +
labs(x = "Ideal point", y = "Speaker")
merged_votes_text <- read.csv("merged_votes_text.csv",
row.names = 1, stringsAsFactors = FALSE)
ft_coding <- data.frame(Name = c("Kohn", "Yellen", "Bernanke", "Pianalto",
"Fisher", "Lacker", "Plosser", "Hoenig"),
coding = c("Super Dove", "Dove", "Center", "Center",
"Hawk", "Super Hawk", "Super Hawk", "Super Hawk"),
stringsAsFactors = FALSE)
votes.implied <- merged_votes_text[,6:9]
names(votes.implied) <- c("Names", "Low.Votes", "Estimate", "High.Votes")
votes.regional <- read.csv("policy_rate_validation.csv",
stringsAsFactors = FALSE, row.names = 1) %>%
mutate(NAME = toupper(name))
est <- read.csv("idealcompare.csv",
stringsAsFactors = FALSE, row.names = 1)
df <- merged_votes_text %>%
left_join(votes.regional, by = "NAME") %>%
left_join(est, by = "NAME") %>%
mutate(Pref.low = Pref.Policy - 1.96 * Pref.STD,
Pref.high = Pref.Policy + 1.96 * Pref.STD,
med.votes.sd = (med.votes - high.votes) / 1.96) %>%
arrange(ideal) %>%
mutate(ordered = 1:n())
small_df <- df %>%
right_join(ft_coding, by = "Name") %>%
select(NAME, ideal, upper, lower, coding) %>%
mutate(coding = factor(coding,
levels = c("Super Dove", "Dove", "Center", "Hawk", "Super Hawk"))) %>%
arrange(coding, ideal) %>%
mutate(row = 1:n())
est <- read.csv("idealcompare.csv",
stringsAsFactors = FALSE, row.names = 1)
tdf <- merged_votes_text %>%
left_join(votes.regional, by = "NAME") %>%
left_join(est, by = "NAME") %>%
mutate(Pref.low = Pref.Policy - 1.96 * Pref.STD,
Pref.high = Pref.Policy + 1.96 * Pref.STD,
med.votes.sd = (med.votes - high.votes) / 1.96) %>%
arrange(ideal) %>%
mutate(ordered = 1:n())
small_df <- df %>%
right_join(ft_coding, by = "Name") %>%
select(NAME, ideal, upper, lower, coding) %>%
mutate(coding = factor(coding,
levels = c("Super Dove", "Dove", "Center", "Hawk", "Super Hawk"))) %>%
arrange(coding, ideal) %>%
mutate(row = 1:n())
est <- read.csv("idealcompare.csv",
stringsAsFactors = FALSE, row.names = 1)
tdf <- merged_votes_text %>%
left_join(votes.regional, by = "NAME") %>%
left_join(est, by = "NAME") %>%
mutate(Pref.low = Pref.Policy - 1.96 * Pref.STD,
Pref.high = Pref.Policy + 1.96 * Pref.STD,
med.votes.sd = (med.votes - high.votes) / 1.96) %>%
arrange(ideal) %>%
mutate(ordered = 1:n())
small_df <- tdf %>%
right_join(ft_coding, by = "Name") %>%
select(NAME, ideal, upper, lower, coding) %>%
mutate(coding = factor(coding,
levels = c("Super Dove", "Dove", "Center", "Hawk", "Super Hawk"))) %>%
arrange(coding, ideal) %>%
mutate(row = 1:n())
labs1 <- small_df$NAME
labs2 <- small_df$coding
ggplot(small_df, aes(x = ideal, y = row)) +
geom_point(size = 2) +
geom_segment(aes(x = lower, xend = upper, y = row, yend = row)) +
scale_y_continuous(breaks = 1:length(labs1),
labels = labs1,
sec.axis = sec_axis(~.,
breaks = 1:length(labs2),
labels = labs2)) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
legend.title = element_blank(),
legend.background = element_blank()) +
labs(x = "Ideal point", y = "Speaker")
# ggsave("rank.pdf", width = 7, height = 5)
nms <- tdf$NAME
g_text <- ggplot(df, aes(x=ideal, y=ordered)) +
geom_point() +
geom_errorbarh(aes(xmin = lower, xmax = upper, height = 0)) +
theme_bw() +
scale_y_continuous(breaks = 1:length(nms),
labels = nms) +
theme(axis.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_blank()) +
#axis.text.y = element_text(face = c(rep("plain",15),rep("bold",8)))) +
ggtitle("Text Measure")
g_votes <- ggplot(df, aes(x=med.votes, y=ordered)) +
geom_point() + geom_errorbarh(aes(xmin = low.votes, xmax = high.votes, height = 0)) +
theme_bw() +
theme(axis.text.y = element_blank(), axis.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_blank()) +
ggtitle("Vote Measure") +
xlim(-4,4)
g_region <- ggplot(df, aes(x=Pref.Policy, y=ordered)) +
geom_point() + geom_errorbarh(aes(xmin = Pref.Policy - 1.96*Pref.STD,
xmax = Pref.Policy + 1.96*Pref.STD, height = 0 )) +
theme_bw() +
theme(axis.text.y = element_blank(), axis.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_blank()) +
ggtitle("Regional Vote Measure") +
xlim(-10,10)
plot_grid(g_text, g_votes, g_region,
align = "h", ncol = 3,
rel_widths = c(0.38, 0.31, 0.31))
